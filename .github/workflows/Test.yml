name: Tests on pull requests and release candidates
on: 
    pull_request:
      branches-ignore:
        - 'release'
      
concurrency: 
  group: ${{ github.head_ref || github.ref }} # Cancel old runs if they have not finished yet
  cancel-in-progress: true

jobs:
  dependencies:
    runs-on: self-hosted
    steps:
      - name: Setup shell
        run: |
          echo "/Users/ds-build-1/.rbenv/shims" >> $GITHUB_PATH
          eval "$(/opt/homebrew/bin/brew shellenv)"
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Restore Dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        env:
          cache-name: cache-dependencies
        with:
          path: |
            vendor
            .bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}        
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: bundle install --path=vendor
      - name: Brew bundle
        run: ./native_arch.sh brew bundle --no-lock
      - name: Save Dependencies
        uses: actions/cache@v2
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        env:
          cache-name: cache-dependencies
        with:
          path: |
            vendor
            .bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}

  swiftLint:
    runs-on: self-hosted
    needs: dependencies
    steps:
      - name: Setup shell
        run: |
          echo "/Users/ds-build-1/.rbenv/shims" >> $GITHUB_PATH
          eval "$(/opt/homebrew/bin/brew shellenv)"
      - name: Check out repository code
        uses: actions/checkout@v2       
      - name: Restore Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            vendor
            .bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
      - name: Run swiftlint
        run: bundle exec fastlane lint
      - name: Archive swiftlint report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: swiftlint-${{ github.sha }}
          path: swiftlint.html

  buildForTesting:
    runs-on: self-hosted
    needs: dependencies
    steps:
      - name: Setup shell
        run: |
          echo "/Users/ds-build-1/.rbenv/shims" >> $GITHUB_PATH
          eval "$(/opt/homebrew/bin/brew shellenv)"
      - name: Check out repository code
        uses: actions/checkout@v2            
      - name: Restore Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            vendor
            .bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}       
      - name: Build
        run: bundle exec fastlane build_for_testing
      - name: Save DerivedData and SwiftPM folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: |
            DerivedData
            .swift-packages
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Save test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}

  runUnitTests:
    runs-on: self-hosted
    needs: buildForTesting
    steps:
      - name: Setup shell
        run: |
          echo "/Users/ds-build-1/.rbenv/shims" >> $GITHUB_PATH
          eval "$(/opt/homebrew/bin/brew shellenv)"
      - name: Check out repository code
        uses: actions/checkout@v2          
      - name: Restore Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            vendor
            .bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
      - name: Restore DerivedData and SwiftPM folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: |
            DerivedData
            .swift-packages
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Restore test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}                       
      - name: Run all tests
        run: |
            export LANG=en_US.UTF-8;
            export LANGUAGE=en_US:en;
            bundle exec fastlane test_without_building testplan:UnitTests
      - name: Archive xcresult
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: xcresult-${{ github.sha }}
          path: fastlane/test_output/BundID.xcresult.zip

  runUITests:
    runs-on: self-hosted
    needs: buildForTesting
    steps:
      - name: Setup shell
        run: |
          echo "/Users/ds-build-1/.rbenv/shims" >> $GITHUB_PATH
          eval "$(/opt/homebrew/bin/brew shellenv)"
      - name: Check out repository code
        uses: actions/checkout@v2          
      - name: Restore Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            vendor
            .bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Gemfile.lock') }}
      - name: Restore DerivedData and SwiftPM folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: |
            DerivedData
            .swift-packages
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Restore test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}                       
      - name: Run UITests
        run: |
            export LANG=en_US.UTF-8;
            export LANGUAGE=en_US:en;
            bundle exec fastlane test_without_building testplan:UITests
      - name: Archive xcresult
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: xcresult-${{ github.sha }}
          path: fastlane/test_output/BundID.xcresult.zip
